---
import '~/styles/global.css';

import geistMono400 from '@fontsource/geist-mono/files/geist-mono-latin-400-normal.woff2';
import geistSans400 from '@fontsource/geist-sans/files/geist-sans-latin-400-normal.woff2';
import geistSans500 from '@fontsource/geist-sans/files/geist-sans-latin-500-normal.woff2';
import geistSans600 from '@fontsource/geist-sans/files/geist-sans-latin-600-normal.woff2';
import { ClientRouter } from 'astro:transitions';

import { SITE } from '~/config/consts';

type Props = {
  title: string;
  description: string;
  image?: string;
};

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = '/OG.png' } = Astro.props;
---

<!-- Global Metadata -->
<meta charset='utf-8' />
<meta name='viewport' content='width=device-width, initial-scale=1' />
<meta name='generator' content={Astro.generator} />
<link
  rel='icon'
  type='image/png'
  href='/favicons/favicon-96x96.png'
  sizes='96x96'
/>
<link rel='icon' type='image/svg+xml' href='/favicons/favicon.svg' />
<link rel='shortcut icon' href='/favicons/favicon.ico' />
<link
  rel='apple-touch-icon'
  sizes='180x180'
  href='/favicons/apple-touch-icon.png'
/>
<meta name='apple-mobile-web-app-title' content='Alexis Guzman' />
<link rel='manifest' href='/favicons/site.webmanifest' />
<link rel='sitemap' href='/sitemap-index.xml' />

<!-- Font preloads -->
<link
  rel='preload'
  href={geistSans400}
  as='font'
  type='font/woff2'
  crossorigin
/>
<link
  rel='preload'
  href={geistSans500}
  as='font'
  type='font/woff2'
  crossorigin
/>
<link
  rel='preload'
  href={geistSans600}
  as='font'
  type='font/woff2'
  crossorigin
/>
<link
  rel='preload'
  href={geistMono400}
  as='font'
  type='font/woff2'
  crossorigin
/>
<meta name='apple-mobile-web-app-title' content='Alexis Guzman' />
<link rel='manifest' href='/favicons/site.webmanifest' />
<link rel='sitemap' href='/sitemap-index.xml' />

<!-- Canonical URL -->
<link rel='canonical' href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name='title' content={title} />
<meta name='description' content={description} />

<!-- Open Graph / Facebook -->
<meta property='og:type' content='website' />
<meta property='og:url' content={Astro.url} />
<meta property='og:site_name' content={title} />
<meta property='og:locale' content='en_US' />
<meta property='og:title' content={title} />
<meta property='og:description' content={description} />
<meta property='og:image' content={new URL(image, Astro.url)} />
<meta property='og:image:width' content='1920' />
<meta property='og:image:height' content='1080' />
<meta property='og:image:alt' content='Alexis Guzman Banner' />

<!-- Twitter -->
<meta property='twitter:card' content='summary_large_image' />
<meta name='twitter:site' content='@codingcodax' />
<meta name='twitter:creator' content='@codingcodax' />
<meta property='twitter:url' content={Astro.url} />
<meta property='twitter:title' content={title} />
<meta property='twitter:description' content={description} />
<meta property='twitter:image' content={new URL(image, Astro.url)} />
<meta name='twitter:image:width' content='1920' />
<meta name='twitter:image:height' content='1080' />
<meta name='twitter:image:alt' content='Alexis Guzman Banner' />

<ClientRouter />

<!-- RSS Link -->
<link
  rel='alternate'
  type='application/rss+xml'
  title={SITE.NAME}
  href={new URL('rss.xml', Astro.site)}
/>

<script>
  import type { TransitionBeforeSwapEvent } from 'astro:transitions/client';

  document.addEventListener('astro:before-swap', (e) =>
    [
      ...(e as TransitionBeforeSwapEvent).newDocument.head.querySelectorAll(
        'link[as="font"]',
      ),
    ].forEach((link) => link.remove()),
  );
</script>

<script is:inline>
  const init = () => {
    document.documentElement.classList.toggle(
      'dark',
      localStorage.theme === 'dark' ||
        (!('theme' in localStorage) &&
          window.matchMedia('(prefers-color-scheme: dark)').matches),
    );

    const animate = () => {
      const animateElements = document.querySelectorAll('.animate');

      animateElements.forEach((element, index) => {
        setTimeout(() => {
          element.classList.add('show');
        }, index * 150);
      });
    };

    animate();
  };

  document.addEventListener('DOMContentLoaded', () => init());
  document.addEventListener('astro:after-swap', () => init());
</script>
